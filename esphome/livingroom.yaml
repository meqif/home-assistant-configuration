esphome:
  name: livingroom
  platform: ESP8266
  board: d1_mini
  includes:
    - 'uart_read_line_sensor.h'

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: !secret wifi_domain
  fast_connect: true

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

mqtt:
  broker: !secret mqtt_broker
  topic_prefix: livingroom

i2c:
  sda: D2
  scl: D1
  scan: True

sensor:
  - platform: adc
    pin: A0
    name: "Living Room Brightness"
    update_interval: 60s

  - platform: bme280
    temperature:
      name: "BME280 Temperature"
      id: bme280_temperature
    pressure:
      name: "BME280 Pressure"
      id: bme280_pressure
    humidity:
      name: "BME280 Relative Humidity"
      id: bme280_humidity
    address: 0x76
    update_interval: 15s

  - platform: template
    name: "BME280 Absolute Humidity"
    lambda: |-
      const float mw = 18.01534;    // molar mass of water g/mol
      const float r = 8.31447215;   // Universal gas constant J/mol/K
      return (6.112 * powf(2.718281828, (17.67 * id(bme280_temperature).state) /
        (id(bme280_temperature).state + 243.5)) * id(bme280_humidity).state * mw) /
        ((273.15 + id(bme280_temperature).state) * r); // in grams/m^3
    accuracy_decimals: 2
    unit_of_measurement: "g/mÂ³"

uart:
  id: uart_bus
  rx_pin: D5
  baud_rate: 9600

text_sensor:
  - platform: custom
    lambda: |-
      auto my_custom_sensor = new UartReadLineSensor(id(uart_bus));
      App.register_component(my_custom_sensor);
      return {my_custom_sensor};
    text_sensors:
      id: "uart_readline"
